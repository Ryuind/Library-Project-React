{"version":3,"sources":["Library/Shelf/Book/Book.module.css","Library/Modal/Modal.module.css","Library/NewBookButton/NewBookButton.module.css","Library/Backdrop/Backdrop.module.css","Library/Shelf/Shelf.module.css","Library/NewBookButton/NewBookButton.js","Library/Backdrop/Backdrop.js","Library/Modal/Modal.js","Library/Shelf/Book/Book.js","Library/Shelf/Shelf.js","Library/Library.js","Container/App.js","serviceWorker.js","index.js"],"names":["module","exports","newBookButton","props","className","classes","ButtonContainer","onClick","clicked","NewBookButton","backdrop","showBackdrop","Backdrop","modal","titleInput","authorInput","pagesInput","readInput","modalOrNot","Modal","onChange","event","target","value","type","required","maxLength","max","min","Checkbox","checked","Submit","changeBookClicked","parentElement","children","style","backgroundImage","backdropClicked","book","bookReadStyle","bookRead","bookPagesShown","bookPages","undefined","Book","TitleDiv","BookTitle","bookTitle","BookAuthor","bookAuthor","bookToggleRead","bookIndex","BookRead","backgroundColor","Pages","DeleteBtn","bookDelete","shelf","Shelf","shelfArray","map","index","key","title","author","pages","read","toggleRead","Library","state","isModalOpen","toggleModalHandler","setState","changeBookInformationHandler","push","deleteBookHandler","splice","toggleReadHandler","this","Component","App","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8226a62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Book\":\"Book_Book__3fGDn\",\"BookRead\":\"Book_BookRead__2VXcD\",\"TitleDiv\":\"Book_TitleDiv__dJpJC\",\"BookTitle\":\"Book_BookTitle__M78gH\",\"BookAuthor\":\"Book_BookAuthor__3dFhp\",\"Pages\":\"Book_Pages__37M4j\",\"DeleteBtn\":\"Book_DeleteBtn__10z8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1qJ6k\",\"Checkbox\":\"Modal_Checkbox__sJ4m5\",\"Submit\":\"Modal_Submit__CPTJR\",\"Text\":\"Modal_Text__3txTM\",\"Invalid\":\"Modal_Invalid__1cVDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"NewBookButton_ButtonContainer__1B5h5\",\"NewBookButton\":\"NewBookButton_NewBookButton__34_ri\",\"enable\":\"NewBookButton_enable__2GCg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1htaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shelf\":\"Shelf_Shelf__dN3yu\"};","import React from 'react';\r\nimport classes from '../NewBookButton/NewBookButton.module.css';\r\n\r\nconst newBookButton = (props) => {\r\n  return (\r\n      <div className={classes.ButtonContainer}>\r\n        <button onClick={props.clicked} className={classes.NewBookButton}>New Book</button>\r\n      </div>\r\n  )  \r\n};\r\n\r\nexport default newBookButton\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => (\r\n    props.showBackdrop ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n)\r\n\r\n\r\n\r\nexport default backdrop","import React, {Fragment} from 'react';\r\nimport classes from '../Modal/Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nconst modal = (props) => {\r\n    let modalOrNot = null;\r\n    let titleInput, authorInput, pagesInput, readInput;\r\n    if(props.showBackdrop) {\r\n        modalOrNot = (\r\n            <div className={classes.Modal}>\r\n                <p>What is the title of this book?</p>\r\n                <input  onChange={event => titleInput = event.target.value} type='text'\r\n                required \r\n                maxLength='40'\r\n                />\r\n                <p>Who is the Author of this book?</p>\r\n                <input onChange={event => authorInput = event.target.value} type='text' \r\n                required \r\n                maxLength='40'\r\n                />\r\n                <p>How many pages is this book?</p>\r\n                <input onChange={event => pagesInput = event.target.value} type='number' \r\n                required \r\n                max='9999'\r\n                min='1' \r\n                />\r\n                <p>Have you read this book?</p>\r\n                <input className={classes.Checkbox} type='checkbox' onChange={event => event.target.checked ? readInput = true : readInput = false}  />\r\n                <br />\r\n                <button className={classes.Submit} onClick={ (event) =>{ \r\n                    if(titleInput && authorInput){\r\n                    props.changeBookClicked(titleInput, authorInput, pagesInput, readInput)\r\n                    } else {\r\n                       titleInput ?  event.target.parentElement.children[0].style.backgroundImage = 'none' : event.target.parentElement.children[0].style.backgroundImage = 'linear-gradient(to right, rgb(240, 51, 51), rgb(238, 102, 125))'\r\n                       authorInput ?  event.target.parentElement.children[2].style.backgroundImage = 'none' : event.target.parentElement.children[2].style.backgroundImage = 'linear-gradient(to right, rgb(240, 51, 51), rgb(238, 102, 125))'\r\n                    }\r\n                }} >Submit</button>\r\n            </div>\r\n        )\r\n    } else {\r\n        modalOrNot = null;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop showBackdrop={props.showBackdrop} clicked={props.backdropClicked}/>\r\n            {modalOrNot}\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default modal","import React from 'react';\r\nimport classes from '../Book/Book.module.css';\r\n\r\nconst book = (props) => {\r\n    let bookReadStyle = 'red'\r\n    if(props.bookRead) {\r\n        bookReadStyle = 'green'\r\n    }\r\n    let bookPagesShown = props.bookPages\r\n    if(props.bookPages >= 9999) {\r\n        bookPagesShown = 9999\r\n    }\r\n    if(props.bookPages === undefined) {\r\n        bookPagesShown = 0\r\n    }\r\n\r\n return (\r\n     <div className={classes.Book}>\r\n         <div className={classes.TitleDiv}>\r\n        <p className={classes.BookTitle}><strong>{props.bookTitle}</strong></p>\r\n        \r\n        <p className={classes.BookAuthor}>{props.bookAuthor}</p>\r\n        </div>\r\n        <div onClick={() => {props.bookToggleRead(props.bookIndex)}} className={classes.BookRead}  style={{\r\n            backgroundColor: bookReadStyle\r\n        }}><p className={classes.Pages}>{bookPagesShown}</p></div><br />\r\n        <button className={classes.DeleteBtn} onClick={() => {props.bookDelete(props.bookIndex)}}>Delete</button> \r\n     </div>\r\n )\r\n}\r\n\r\nexport default book","import React from 'react';\r\nimport classes from '../Shelf/Shelf.module.css'\r\nimport Book from '../Shelf/Book/Book'\r\n\r\nconst shelf = (props) => {\r\n    return (\r\n        <div className={classes.Shelf}>\r\n            {props.shelfArray.map( (book, index) =>{\r\n                return (<Book \r\n                        key={index}\r\n                        bookTitle={book.title}\r\n                        bookAuthor={book.author}\r\n                        bookPages={book.pages}\r\n                        bookRead={book.read}\r\n                        bookIndex={index}\r\n                        bookDelete={props.bookDelete}\r\n                        bookToggleRead={props.toggleRead}\r\n                    />)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default shelf","import React, {Component, Fragment} from 'react';\r\nimport NewBookButton from './/NewBookButton/NewBookButton'\r\nimport Modal from '../Library/Modal/Modal'\r\nimport Shelf from '../Library/Shelf/Shelf'\r\n\r\n\r\nclass Library extends Component {\r\n    state = {\r\n        shelfArray: [{\r\n            title: 'Title of The Book',\r\n            author: 'Author of Book',\r\n            pages: '69',\r\n            read: false\r\n        }],\r\n        isModalOpen: false\r\n    }\r\n\r\n    toggleModalHandler = () => {\r\n        if(this.state.isModalOpen === false) {\r\n            this.setState({isModalOpen: true})\r\n        } else {\r\n            this.setState({isModalOpen: false})\r\n        }\r\n    }\r\n\r\n    changeBookInformationHandler = (title, author, pages, read) =>{\r\n        this.state.shelfArray.push(\r\n            {\r\n                title: title,\r\n                author: author,\r\n                pages: pages,\r\n                read: read\r\n            }\r\n        )\r\n            this.toggleModalHandler();\r\n    }\r\n\r\n    deleteBookHandler = (index) =>{\r\n        const shelfArray =  [...this.state.shelfArray]\r\n        shelfArray.splice(index, 1)\r\n        this.setState({\r\n            shelfArray: shelfArray\r\n        }) \r\n\r\n    }\r\n\r\n    toggleReadHandler = (index) => {\r\n        const shelfArray = [...this.state.shelfArray];\r\n        shelfArray[index]= {\r\n            title: shelfArray[index].title,\r\n            author: shelfArray[index].author,\r\n            pages: shelfArray[index].pages,\r\n            read: !shelfArray[index].read\r\n        }\r\n        this.setState({\r\n            shelfArray: shelfArray\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                    <NewBookButton clicked={this.toggleModalHandler}/>\r\n                    <Shelf shelfArray={this.state.shelfArray}\r\n                            bookDelete={this.deleteBookHandler}\r\n                            toggleRead={this.toggleReadHandler}\r\n                    />\r\n                    <Modal \r\n                    changeBookClicked={this.changeBookInformationHandler}\r\n                    backdropClicked={this.toggleModalHandler} \r\n                    showBackdrop={this.state.isModalOpen}\r\n                    />\r\n                    \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Library","import React, { Component, Fragment } from 'react';\nimport Library from '../Library/Library'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[App.js] constructor');\n  }\n\n  state = {\n   \n  };\n\n \n  \n  render() {\n    return (\n      <Fragment>\n        <Library />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/Container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}